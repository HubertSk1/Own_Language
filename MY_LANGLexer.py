# Generated from MY_LANG.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,20,147,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,7,3,7,79,8,7,1,7,4,7,82,8,7,11,7,12,7,83,1,8,
        3,8,87,8,8,1,8,4,8,90,8,8,11,8,12,8,91,1,8,1,8,5,8,96,8,8,10,8,12,
        8,99,9,8,1,9,3,9,102,8,9,1,9,4,9,105,8,9,11,9,12,9,106,1,9,1,9,5,
        9,111,8,9,10,9,12,9,114,9,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,5,16,132,8,16,10,16,12,16,
        135,9,16,1,17,1,17,1,18,1,18,1,19,4,19,142,8,19,11,19,12,19,143,
        1,19,1,19,0,0,20,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,1,0,4,1,
        0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,
        9,10,13,13,32,32,156,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,1,41,1,0,0,0,3,43,1,0,0,0,5,45,1,0,0,0,7,47,1,0,
        0,0,9,53,1,0,0,0,11,58,1,0,0,0,13,68,1,0,0,0,15,78,1,0,0,0,17,86,
        1,0,0,0,19,101,1,0,0,0,21,117,1,0,0,0,23,119,1,0,0,0,25,121,1,0,
        0,0,27,123,1,0,0,0,29,125,1,0,0,0,31,127,1,0,0,0,33,129,1,0,0,0,
        35,136,1,0,0,0,37,138,1,0,0,0,39,141,1,0,0,0,41,42,5,91,0,0,42,2,
        1,0,0,0,43,44,5,44,0,0,44,4,1,0,0,0,45,46,5,93,0,0,46,6,1,0,0,0,
        47,48,5,80,0,0,48,49,5,82,0,0,49,50,5,73,0,0,50,51,5,78,0,0,51,52,
        5,84,0,0,52,8,1,0,0,0,53,54,5,82,0,0,54,55,5,69,0,0,55,56,5,65,0,
        0,56,57,5,68,0,0,57,10,1,0,0,0,58,59,5,84,0,0,59,60,5,79,0,0,60,
        61,5,95,0,0,61,62,5,68,0,0,62,63,5,79,0,0,63,64,5,85,0,0,64,65,5,
        66,0,0,65,66,5,76,0,0,66,67,5,69,0,0,67,12,1,0,0,0,68,69,5,84,0,
        0,69,70,5,79,0,0,70,71,5,95,0,0,71,72,5,70,0,0,72,73,5,76,0,0,73,
        74,5,79,0,0,74,75,5,65,0,0,75,76,5,84,0,0,76,14,1,0,0,0,77,79,5,
        45,0,0,78,77,1,0,0,0,78,79,1,0,0,0,79,81,1,0,0,0,80,82,7,0,0,0,81,
        80,1,0,0,0,82,83,1,0,0,0,83,81,1,0,0,0,83,84,1,0,0,0,84,16,1,0,0,
        0,85,87,5,45,0,0,86,85,1,0,0,0,86,87,1,0,0,0,87,89,1,0,0,0,88,90,
        7,0,0,0,89,88,1,0,0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,
        92,93,1,0,0,0,93,97,5,46,0,0,94,96,7,0,0,0,95,94,1,0,0,0,96,99,1,
        0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,18,1,0,0,0,99,97,1,0,0,0,100,
        102,5,45,0,0,101,100,1,0,0,0,101,102,1,0,0,0,102,104,1,0,0,0,103,
        105,7,0,0,0,104,103,1,0,0,0,105,106,1,0,0,0,106,104,1,0,0,0,106,
        107,1,0,0,0,107,108,1,0,0,0,108,112,5,46,0,0,109,111,7,0,0,0,110,
        109,1,0,0,0,111,114,1,0,0,0,112,110,1,0,0,0,112,113,1,0,0,0,113,
        115,1,0,0,0,114,112,1,0,0,0,115,116,5,70,0,0,116,20,1,0,0,0,117,
        118,5,42,0,0,118,22,1,0,0,0,119,120,5,47,0,0,120,24,1,0,0,0,121,
        122,5,43,0,0,122,26,1,0,0,0,123,124,5,45,0,0,124,28,1,0,0,0,125,
        126,5,61,0,0,126,30,1,0,0,0,127,128,5,59,0,0,128,32,1,0,0,0,129,
        133,7,1,0,0,130,132,7,2,0,0,131,130,1,0,0,0,132,135,1,0,0,0,133,
        131,1,0,0,0,133,134,1,0,0,0,134,34,1,0,0,0,135,133,1,0,0,0,136,137,
        5,40,0,0,137,36,1,0,0,0,138,139,5,41,0,0,139,38,1,0,0,0,140,142,
        7,3,0,0,141,140,1,0,0,0,142,143,1,0,0,0,143,141,1,0,0,0,143,144,
        1,0,0,0,144,145,1,0,0,0,145,146,6,19,0,0,146,40,1,0,0,0,11,0,78,
        83,86,91,97,101,106,112,133,143,1,6,0,0
    ]

class MY_LANGLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    PRINT = 4
    READ = 5
    TO_DOUBLE = 6
    TO_FLOAT = 7
    INT = 8
    DOUBLE = 9
    FLOAT = 10
    MUL = 11
    DIV = 12
    ADD = 13
    SUB = 14
    SET = 15
    EOE = 16
    ID = 17
    LEFT_P = 18
    RIGHT_P = 19
    WS = 20

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "','", "']'", "'PRINT'", "'READ'", "'TO_DOUBLE'", "'TO_FLOAT'", 
            "'*'", "'/'", "'+'", "'-'", "'='", "';'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "PRINT", "READ", "TO_DOUBLE", "TO_FLOAT", "INT", "DOUBLE", "FLOAT", 
            "MUL", "DIV", "ADD", "SUB", "SET", "EOE", "ID", "LEFT_P", "RIGHT_P", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "PRINT", "READ", "TO_DOUBLE", 
                  "TO_FLOAT", "INT", "DOUBLE", "FLOAT", "MUL", "DIV", "ADD", 
                  "SUB", "SET", "EOE", "ID", "LEFT_P", "RIGHT_P", "WS" ]

    grammarFileName = "MY_LANG.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


