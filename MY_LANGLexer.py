# Generated from MY_LANG.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,20,126,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,3,
        7,73,8,7,1,7,4,7,76,8,7,11,7,12,7,77,1,8,3,8,81,8,8,1,8,4,8,84,8,
        8,11,8,12,8,85,1,8,1,8,5,8,90,8,8,10,8,12,8,93,9,8,1,9,1,9,1,10,
        1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
        5,16,111,8,16,10,16,12,16,114,9,16,1,17,1,17,1,18,1,18,1,19,4,19,
        121,8,19,11,19,12,19,122,1,19,1,19,0,0,20,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,1,0,4,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,
        57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,132,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,1,41,1,0,0,0,3,43,1,0,
        0,0,5,45,1,0,0,0,7,50,1,0,0,0,9,54,1,0,0,0,11,60,1,0,0,0,13,66,1,
        0,0,0,15,72,1,0,0,0,17,80,1,0,0,0,19,94,1,0,0,0,21,96,1,0,0,0,23,
        98,1,0,0,0,25,100,1,0,0,0,27,102,1,0,0,0,29,104,1,0,0,0,31,106,1,
        0,0,0,33,108,1,0,0,0,35,115,1,0,0,0,37,117,1,0,0,0,39,120,1,0,0,
        0,41,42,5,91,0,0,42,2,1,0,0,0,43,44,5,93,0,0,44,4,1,0,0,0,45,46,
        5,83,0,0,46,47,5,73,0,0,47,48,5,90,0,0,48,49,5,69,0,0,49,6,1,0,0,
        0,50,51,5,65,0,0,51,52,5,68,0,0,52,53,5,68,0,0,53,8,1,0,0,0,54,55,
        5,83,0,0,55,56,5,67,0,0,56,57,5,65,0,0,57,58,5,76,0,0,58,59,5,69,
        0,0,59,10,1,0,0,0,60,61,5,80,0,0,61,62,5,82,0,0,62,63,5,73,0,0,63,
        64,5,78,0,0,64,65,5,84,0,0,65,12,1,0,0,0,66,67,5,82,0,0,67,68,5,
        69,0,0,68,69,5,65,0,0,69,70,5,68,0,0,70,14,1,0,0,0,71,73,5,45,0,
        0,72,71,1,0,0,0,72,73,1,0,0,0,73,75,1,0,0,0,74,76,7,0,0,0,75,74,
        1,0,0,0,76,77,1,0,0,0,77,75,1,0,0,0,77,78,1,0,0,0,78,16,1,0,0,0,
        79,81,5,45,0,0,80,79,1,0,0,0,80,81,1,0,0,0,81,83,1,0,0,0,82,84,7,
        0,0,0,83,82,1,0,0,0,84,85,1,0,0,0,85,83,1,0,0,0,85,86,1,0,0,0,86,
        87,1,0,0,0,87,91,5,46,0,0,88,90,7,0,0,0,89,88,1,0,0,0,90,93,1,0,
        0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,18,1,0,0,0,93,91,1,0,0,0,94,95,
        5,42,0,0,95,20,1,0,0,0,96,97,5,47,0,0,97,22,1,0,0,0,98,99,5,43,0,
        0,99,24,1,0,0,0,100,101,5,45,0,0,101,26,1,0,0,0,102,103,5,61,0,0,
        103,28,1,0,0,0,104,105,5,59,0,0,105,30,1,0,0,0,106,107,5,44,0,0,
        107,32,1,0,0,0,108,112,7,1,0,0,109,111,7,2,0,0,110,109,1,0,0,0,111,
        114,1,0,0,0,112,110,1,0,0,0,112,113,1,0,0,0,113,34,1,0,0,0,114,112,
        1,0,0,0,115,116,5,40,0,0,116,36,1,0,0,0,117,118,5,41,0,0,118,38,
        1,0,0,0,119,121,7,3,0,0,120,119,1,0,0,0,121,122,1,0,0,0,122,120,
        1,0,0,0,122,123,1,0,0,0,123,124,1,0,0,0,124,125,6,19,0,0,125,40,
        1,0,0,0,8,0,72,77,80,85,91,112,122,1,6,0,0
    ]

class MY_LANGLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    M_SIZE = 3
    M_ADD = 4
    SCALE = 5
    PRINT = 6
    READ = 7
    INT = 8
    REAL = 9
    MUL = 10
    DIV = 11
    ADD = 12
    SUB = 13
    SET = 14
    EOE = 15
    COMA = 16
    ID = 17
    LEFT_P = 18
    RIGHT_P = 19
    WS = 20

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'SIZE'", "'ADD'", "'SCALE'", "'PRINT'", "'READ'", 
            "'*'", "'/'", "'+'", "'-'", "'='", "';'", "','", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "M_SIZE", "M_ADD", "SCALE", "PRINT", "READ", "INT", "REAL", 
            "MUL", "DIV", "ADD", "SUB", "SET", "EOE", "COMA", "ID", "LEFT_P", 
            "RIGHT_P", "WS" ]

    ruleNames = [ "T__0", "T__1", "M_SIZE", "M_ADD", "SCALE", "PRINT", "READ", 
                  "INT", "REAL", "MUL", "DIV", "ADD", "SUB", "SET", "EOE", 
                  "COMA", "ID", "LEFT_P", "RIGHT_P", "WS" ]

    grammarFileName = "MY_LANG.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


